// This code is improved version for can receiver 
// This single code can receiver 100 nodes only need to connect additional nodes with increment id


#include <SPI.h>              //Library for using SPI Communication 
#include <mcp2515.h>          //Library for using CAN Communication (https://github.com/autowp/arduino-mcp2515/)
 

struct can_frame canMsg;
 
MCP2515 mcp2515(10);                 // SPI CS Pin 10
 
 
void setup()
{
  Serial.begin(9600);                //Begins Serial Communication at 9600 baudrate
  SPI.begin();                       //Begins SPI communication
  mcp2515.reset();
  mcp2515.setBitrate(CAN_500KBPS, MCP_8MHZ); //Sets CAN at speed 500KBPS and Clock 8MHz
  mcp2515.setNormalMode();                  //Sets CAN at normal mode
}
 
 
void loop()
{
  if (mcp2515.readMessage(&canMsg) == MCP2515::ERROR_OK) // To receive data (Poll Read)
  {
 

 Serial.println(canMsg.can_id);

for (int i=1;i<100;i++)

{
 if (canMsg.can_id== i)
 {
  Serial.println("CAGE" + String(i));
      int t = canMsg.data[0];
    int h = canMsg.data[1];
     int hic = canMsg.data[2];
    int hif = canMsg.data[3];
    Serial.print("Cage" + String(i)+" Temp :");
    Serial.println(t);
    Serial.print("Cage" + String(i)+" Humi :");
    Serial.println(h);
     Serial.print("Cage" + String(i)+" Temp Index :");
    Serial.println(t);
    Serial.print("Cage " + String(i)+" Humi Index :");
    Serial.println(h);
    Serial.println("**********************************");
    delay(100);
  }


  }
}
}

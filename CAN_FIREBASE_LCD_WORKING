// This is working code for updating data like tempreture and Humidity receive from UART 
// This code dont have WIFI manager code include it means you need to change SSID AND PASSWORD mannually if required



#include <WiFi.h>
#include <FirebaseESP32.h>
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x3F, 16, 2);

#define FIREBASE_HOST "https://esp32cam-36ba2-default-rtdb.asia-southeast1.firebasedatabase."
#define FIREBASE_AUTH "AIzaSyC9lHE4bU-kml886tgeoNnvTkSR4yYQ"
#define WIFI_SSID "Lifetrust_Office"
#define WIFI_PASSWORD "Lifetrust@123" //        "Lifetrust@123"


//Define FirebaseESP32 data object
FirebaseData firebaseData;
FirebaseJson json;



#define RXp2 16
#define TXp2 17
void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  Serial2.begin(9600, SERIAL_8N1, RXp2, TXp2);
   lcd.begin();                      // initialize the lcd
  //  lcd.init();
  // Print a message to the LCD.
  lcd.backlight();


  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED)
  {
     lcd.setCursor(0, 0);
      lcd.print("Connecting");
    Serial.print(".");
    delay(300);
  }
  Serial.println();
  Serial.print("Connected with IP: ");
  Serial.println(WiFi.localIP());
  Serial.println();
     lcd.setCursor(0, 0);
    lcd.print("Connected");

  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
  Firebase.reconnectWiFi(true);

  //Set database read timeout to 1 minute (max 15 minutes)
  Firebase.setReadTimeout(firebaseData, 1000 * 60);
  //tiny, small, medium, large and unlimited.
  //Size and its write timeout e.g. tiny (1s), small (10s), medium (30s) and large (60s).
  Firebase.setwriteSizeLimit(firebaseData, "tiny");

  /*
    This option allows get and delete functions (PUT and DELETE HTTP requests) works for device connected behind the
    Firewall that allows only GET and POST requests.

    Firebase.enableClassicRequest(firebaseData, true);
  */

  //String path = "/data";


  Serial.println("------------------------------------");
  Serial.println("Connected...");
  delay(2000);
  lcd.clear();
}
void loop() {
  Serial.println("Message Received: ");
  String Data =  Serial2.readString();
  Serial.println(Data);

  delay(2000);
  //  Serial.println(Data.substring(0,1));
  //Serial.println(Data.substring(22,24)); // This is Tempreture
  //Serial.println(Data.substring(38,40)); // This is Humidity
  Serial.flush();
  String id = Data.substring(0, 1);


  if (id == String("1") )
  {
    Serial.println("My id is CAGE 1");
    String T = Data.substring(22, 24);
    String H = Data.substring(38, 40);
    //Serial.println(T); // This is Tempreture
    //Serial.println(H); // This is Humidity
    Serial.println(T.toInt());
    Serial.println(H.toInt());
         lcd.setCursor(4, 0);
    lcd.print("CAGE 2");
    lcd.setCursor(0, 1);
    lcd.print("Temp:" + String(T));
    lcd.setCursor(9, 1);
    lcd.print("Humi:" + String(H));
    json.set("/CAGE1 Temp", T.toInt());
    json.set("/CAGE1 Humi", H.toInt());
    Firebase.updateNode(firebaseData, "/CAN", json);
    delay(1000);
  }
  delay(100);
  Serial.flush();
  delay(2000);
  if (id == String("2") )
  {
    String T = Data.substring(22, 24);
    String H = Data.substring(38, 40);
    Serial.println("My id is CAGE 2");
    // Serial.println(Data.substring(22,24)); // This is Tempreture
    //Serial.println(Data.substring(38,40)); // This is Humidity
    Serial.println(T.toInt());
    Serial.println(H.toInt());
    json.set("/CAGE2 Temp", T.toInt());
    json.set("/CAGE2 Humi", H.toInt());
        lcd.setCursor(4, 0);
    lcd.print("CAGE 2");
    lcd.setCursor(0, 1);
    lcd.print("Temp:" + String(T));
    lcd.setCursor(9, 1);
    lcd.print("Humi:" + String(H));
    Firebase.updateNode(firebaseData, "/CAN", json);
    delay(1000);
  }
  Serial.flush();


//lcd.clear();


}
























